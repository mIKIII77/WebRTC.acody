---
import Layout from '../layouts/Layout.astro';
---
<Layout title="Chat" seoTitle="Simple Chat" seoDesc="A simple chat application">
  <div class="bg-neutral-800 text-white p-4 rounded-md shadow-md mt-8">
    <h1 class="text-2xl font-semibold">Messagerie</h1>
  </div>

  <!-- Zone de chat (ajoutée) -->
  <div id="messages" class="messages-container">
    <!-- Les messages s'afficheront ici -->
  </div>


  <!-- Zone de saisie de nom d'utilisateur -->
  <div class="bg-neutral-800 p-4 rounded-md shadow-md mb-4">
    <input
      id="username"
      type="text"
      placeholder="Entrez votre nom d'utilisateur..."
      class="flex-1 p-2 border border-neutral-300 rounded-md bg-neutral-800"
    />
  </div>

  <!-- Zone de saisie de message -->
  <div class="bg-neutral-800 p-4 rounded-md shadow-md mb-12">
    <div class="flex">
      <input
        id="message"
        type="text"
        placeholder="Écrivez votre message..."
        class="flex-1 p-2 border border-neutral-300 rounded-l-md bg-neutral-800"
      />
      <button id="sendButton" class="bg-teal-500 text-white p-2 rounded-r-md">Envoyer</button>
    </div>
  </div>

  <style>
    #messages {
      display: flex;
      flex-direction: column;
      overflow-y: auto;
    }
  </style>

  <script src="https://cdn.socket.io/4.0.0/socket.io.min.js" crossorigin="anonymous"></script>

  <script type="text/javascript">
    document.addEventListener('DOMContentLoaded', () => {
      const socket = io(); // Utiliser 'io' défini par le script CDN
      const userId = Date.now().toString(); // Générer un identifiant unique pour l'utilisateur
  
      socket.on('connect', () => {
        console.log('Connecté au serveur Socket.io');
      });
  
      const sendButton = document.getElementById('sendButton');
      const messagesDiv = document.getElementById('messages');
      const usernameInput = document.getElementById('username');
      const messageInput = document.getElementById('message');
  
      if (sendButton && messagesDiv && usernameInput && messageInput) {
        sendButton.addEventListener('click', () => {
          const username = usernameInput.value || 'Anonyme';
          const message = messageInput.value;
  
          if (message.trim() !== '') {
            socket.emit('chat_message', { userId, username, message });
            messageInput.value = '';
          }
        });
  
        socket.on('chat_message', (data) => {
          const messageContainer = document.createElement('div');
          messageContainer.className = "flex my-2";

          const messageElement = document.createElement('div');
          messageElement.className = "px-4 py-2 rounded-lg shadow";

          // Créer un élément span pour le nom de l'expéditeur en gras
          const senderName = document.createElement('strong');
          senderName.textContent = data.userId === userId ? 'Vous' : data.username;
          
          // Ajouter le nom de l'expéditeur à l'élément de message
          messageElement.appendChild(senderName);
          // Ajouter le texte du message après le nom de l'expéditeur
          messageElement.appendChild(document.createTextNode(`: ${data.message}`));

          if (data.userId === userId) {
            messageContainer.classList.add('justify-end');
            messageElement.classList.add('bg-teal-500', 'text-white');
          } else {
            messageContainer.classList.add('justify-start');
            messageElement.classList.add('bg-gray-200', 'text-black');
          }

          messageContainer.appendChild(messageElement);
          messagesDiv.appendChild(messageContainer);
          // Faire défiler vers le bas pour afficher le nouveau message
          messagesDiv.scrollTop = messagesDiv.scrollHeight;
        });
      }
    });
  </script>  
</Layout>
